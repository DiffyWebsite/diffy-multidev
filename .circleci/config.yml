version: 2.1
workflows:
  version: 2
  build_and_push:
    jobs:
      - build:
          context:
            - drupal
      - pantheon/push:
          requires:
            - build
          context:
            - drupal
          checkout: false
          terminus_clone_env: live
          clone_content: false
          env_create_max_time: "15m"
          pre-steps:
            - checkout
            - attach_workspace:
                at: .
      - afterbuild:
          requires:
            - pantheon/push
          context:
            - drupal
#      - diffy:
#          requires:
#            - afterbuild
#          context:
#            - drupal
#          filters:
#            branches:
#              ignore:
#                - master
      - diffy_manual:
          requires:
            - afterbuild
          context:
            - drupal
          filters:
            branches:
              ignore:
                - master

orbs:
  diffy: diffy/diffy@0.0.4
  # Pantheon Orb source and README: https://github.com/pantheon-systems/circleci-orb
  # More Pantehon Orb Docs https://circleci.com/developer/orbs/orb/pantheon-systems/pantheon
  pantheon: pantheon-systems/pantheon@0.6.0
jobs:
  build:
    docker:
      - image: docksal/cli:2.11-php7.4
        user: docker
    # resource_class: xlarge
    working_directory: /var/www
    steps:
      - run:
          name: Prepare /var/www for Docksal image environment
          command: |
            sudo rmdir html
            sudo chown docker: /var/www

      - checkout
    # Steps to build the theme ar whatever needed before deployment.
  afterbuild:
    docker:
      - image: quay.io/pantheon-public/build-tools-ci:6.x
    # resource_class: xlarge
    working_directory: /var/www
    steps:
      - run:
          name: Run config import and cache clear on multidev env
          command: |
            /build-tools-ci/scripts/set-environment
#            terminus -n auth:login --machine-token="$TERMINUS_TOKEN"
#            TERMINUS_FULL_SITE="$TERMINUS_SITE.$TERMINUS_ENV"
#            echo "$TERMINUS_FULL_SITE"
#            terminus remote:drush "$TERMINUS_FULL_SITE" config:import -y
#            terminus remote:drush "$TERMINUS_FULL_SITE" cr

  diffy: diffy/compare_multidev_dev

  diffy_manual:
    docker:
      - image: cimg/php:8.1.21
    steps:
      - run:
          name: Run compare job and post a github comment
          command: |
            if [ -z "$DIFFY_API_KEY" ]
            then
              echo "Diffy integration is not configured. Add DIFFY_API_KEY to CircleCI variables."
              exit 1;
            fi
            if [ -z "$DIFFY_PROJECT_ID" ]
            then
              echo "Diffy integration is not configured. Add DIFFY_PROJECT_ID to CircleCI variables."
              exit 1;
            fi

            # Ping the multidev environment to wake it from sleep
            echo -e "\nPinging the ${TERMINUS_ENV} multidev environment to wake it from sleep..."
            curl -I "$MULTIDEV_SITE_URL" >/dev/null
            # Ping the live environment to wake it from sleep
            echo -e "\nPinging the dev environment to wake it from sleep..."
            curl -I "$DEV_SITE_URL" >/dev/null

            # Download Diffy-CLI.
            wget https://github.com/diffywebsite/diffy-cli/releases/latest/download/diffy.phar

            // Authenticate.
            php diffy.phar auth:login $DIFFY_API_KEY

            // Compare with commit sha so Diffy's github check posts the results.
            LAST_GIT_COMMIT_HASH=$(git log -1 --pretty=%H)
            php diffy.phar project:compare $DIFFY_PROJECT_ID dev custom --env2Url="${MULTIDEV_SITE_URL}" --commit-sha="${LAST_GIT_COMMIT_HASH}"